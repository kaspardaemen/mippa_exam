plot(x,y)
h0 <- dnorm(x, mean = 6, sd=SE)
plot(x,h0)
h1 <- dnorm(x, mean = m, sd=SE)
plot(x,h0)
plot(x,h1)
h0_dist <- dnorm(x, mean = 6, sd=SE)
sample_dist <- dnorm(x, mean = m, sd=SE)
plot(x,h0_dist)
t.statistic <- (6-m)/SE
t.statistic <- (m-6)/SE
?pt
#which will give a p-value of -1.833
p.value <- -1.833
?pt
?rt
?pt
?pnorm
n <-  length(sample)-1
#which will give a p-value of -1.833
p.value <- 2*pt(-abs(t.statistic),df=n-1)
#which will give a p-value of -1.833
p.value <- pt(abs(t.statistic),df=n-1)
n <-  length(sample)
#which will give a p-value of -1.833
p.value <- pt(t.statistic,df=n-1)
?pt
#3 CALCULATE P-VALUE
p.value <- pt(t.statistic, n-1)
?pt
?zt
?zdist
?dnorm
?pnorm
pnorm(0.025, mean=0, sd = 1)
dnorm(0.025, mean=0, sd=1)
qnorm(0.025, mean=0, sd=1)
dnorm(1.96, mean=0, sd =1)
pnorm(1.96, mean=0, sd=1)
qnorm(0.05, mean=0, sd = 1)
qnorm(0.025, mean=0, sd = 1)
(-qnorm(0.025, mean=0, sd = 1))*2
qnorm(0.05, mean=0, sd=1)*2
qnorm(0.05, mean=0, sd=1, lower.tail =  FALSE)
qnorm(0.0025, mean=0, sd=1, lower.tail =  FALSE)
426/860
1.96*sqrt(0.495*(1-0.495)/n)
0.495 - 0.3098877
SE = sqrt(0.495*(1-0.495)/1000)
SE = sqrt(0.495*(1-0.495)/1000)
SE = sqrt(0.495*(1-0.495)/869)
SE = sqrt(0.495*(1-0.495)/869)
lower_bound = 0.495-(1.96*SE)
upper_bound = 0.495+(1.96*SE)
lower_bound = round( 0.495-(1.96*SE), 4)
upper_bound = round(0.495+(1.96*SE), 4)
p = 426/860
SE = sqrt(p*(1-p)/860)
lower_bound = round( 0.495-(1.96*SE), 4)
upper_bound = round(0.495+(1.96*SE), 4)
p = 426/860
SE = sqrt((p*(1-p))/860)
lower_bound = round( 0.495-(1.96*SE), 4)
upper_bound = round(0.495+(1.96*SE), 4)
p = 426/860
SE = sqrt((p*(1-p))/860)
lower_bound = round( 0.495-(1.96*SE), 4)
upper_bound = round(0.495+(1.96*SE), 4)
lower_bound = round( 0.495-(1.96*SE), 5)
upper_bound = round(0.495+(1.96*SE), 5)
lower_bound = round( 0.495-(1.96*SE), 4)
upper_bound = round(0.495+(1.96*SE), 4)
qnorm(0.025, mean=0, sd=1, lower.tail =  FALSE)
p = 426/860
SE = sqrt((p*(1-p))/860)
lower_bound = round( 0.495-(1.959964*SE), 4)
upper_bound = round(0.495+(1.959964*SE), 4)
p = 426/860
SE = sqrt((p*(1-p))/860)
lower_bound = round( 0.495-(1.959964*SE), 4)
upper_bound = round(0.495+(1.959964*SE), 4)
p = round(426/, 4)
p = round(426/860,4)
SE = sqrt((p*(1-p))/860)
lower_bound = round( 0.495-(1.959964*SE), 4)
upper_bound = round(0.495+(1.959964*SE), 4)
lower_bound = round( 0.495-(1.959964*SE), 4)
upper_bound = round(0.495+(1.959964*SE), 4)
SE = sqrt((p*(1-p))/860)
lower_bound = round( 0.495-(1.96*SE), 4)
upper_bound = round(0.495+(1.96*SE), 4)
lower_bound = round( 0.495-(1.98*SE), 4)
lower_bound = round( 0.495-(1.96*SE), 4)
p = 0.43
p = 0.43
n = 1487
SE = sqrt((p*(1-p))/860)
lower_bound = round( 0.495-(1.96*SE), 4)
upper_bound = round(0.495+(1.96*SE), 4)
p = 0.43
n = 1487
SE = sqrt((p*(1-p))/n)
lower_bound = round( 0.495-(1.96*SE), 4)
upper_bound = round(0.495+(1.96*SE), 4)
lower_bound = round( p-(1.96*SE), 4)
upper_bound = round(p+(1.96*SE), 4)
p = 426/860
n = 860
SE = sqrt((p*(1-p))/n)
lower_bound = round( p-(1.96*SE), 4)
upper_bound = round(p+(1.96*SE), 4)
#ci VAN EEN POPULATION (TIJDELIJK)
n = 264+54
p = 54/n
z = qnorm(0.005, mean=0, sd=1, lower.tail =  FALSE)
SE = sqrt((p*(1-p))/n)
lower_bound = round( p-(z*SE), 4)
upper_bound = round(p+(z*SE), 4)
SE = sqrt((p*(1-p))/n)
lower_bound = round( p-(z*SE), 3) * 100
upper_bound = round(p+(z*SE), 3) * 100
#ci VAN EEN POPULATION (TIJDELIJK)
n <-  264+54
p <-  54/n
z <-  qnorm(0.005, mean=0, sd=1, lower.tail =  FALSE)
SE <-  sqrt((p*(1-p))/n)
lower_bound <-  round( p-(z*SE), 3) * 100
upper_bound <-  round(p+(z*SE), 3) * 100
z <-  qnorm(0.025, mean=0, sd=1, lower.tail =  FALSE)
n <-  264+54
p <-  54/n
z <-  qnorm(0.025, mean=0, sd=1, lower.tail =  FALSE)
SE <-  sqrt((p*(1-p))/n)
lower_bound <-  round( p-(z*SE), 3) * 100
upper_bound <-  round(p+(z*SE), 3) * 100
sample <- c(7,3,4,6,10,5,6,4,3,8)
m <- mean(sample)
stdv <- sd(sample)
SE <- stdv/sqrt(length(sample))
n <-  length(sample)
x <- seq(1, 10, by = .1)
h0_dist <- dnorm(x, mean = 6, sd=SE)
sample_dist <- dnorm(x, mean = m, sd=SE)
plot(x,h0_dist)
t.statistic <- (m-6)/SE # because we don't know the real sd of the population
#3 CALCULATE P-VALUE
p.value <- pt(t.statistic, n-1)
sample <- c(7,3,4,6,10,5,6,4,3,8)
m <- mean(sample)
stdv <- sd(sample)
SE <- stdv/sqrt(length(sample))
n <-  length(sample)
x <- seq(1, 10, by = .1)
h0_dist <- dnorm(x, mean = 6, sd=SE)
sample_dist <- dnorm(x, mean = m, sd=SE)
plot(x,h0_dist)
t.statistic <- (m-6)/SE # because we don't know the real sd of the population
#3 CALCULATE P-VALUE
p.value <- pt(t.statistic, n-1)
?t.test
#in R:
t.test(x=sample, mu=6, alternative="less")
?dbinom
pbinom(0, p=32/43, size = 8, lower.tail = FALSE)
pbinom(0, p=12/43, size = 8, lower.tail = FALSE)
system("type R")
R.home()
t.statistic <- 10/12-1/2/sqrt(1/2*(1-1/2)/12)
pt(t.statistic, n-1)
t.statistic <- 9/12-1/2/sqrt(1/2*(1-1/2)/12)
p <- 9/12
p_0 <- 1/2
p-p_0/sqrt(p_0*(1-p_0)/n)
pt(t.statistic, n-1)
p = 6/12
p-p_0/sqrt(p_0*(1-p_0)/n)
prop.test(x=10,n=12, p=1/2)
prop.test(x=9,n=12, p=1/2)
prop.test(x=21,n=31, p=1/2)
prop.test(x=11,n=13, p=1/2)
(p-p_0)/(sqrt(p_0*(1-p_0)/10))
n=10
(p-p_0)/(sqrt(p_0*(1-p_0)/n))
n=13
p=11/13
(p-p_0)/(sqrt(p_0*(1-p_0)/n))
pt(t.statistic, n-1)
pt(2.496151, n-1)
t.statistic <- 2.496151
pt(t.statistic, n-1)
1- pt(t.statistic, n-1) * 2
1- pt(t.statistic, n-1)
2 * (pt(t.statistic, n-1))
(pt(t.statistic, n-1)
df
pt(t.statistic, n-1)
(1-pt(t.statistic, n-1))
2 * (1-pt(t.statistic, n-1))
p = 21/31
n=31
t.statistic = (p-p_0)/(sqrt(p_0*(1-p_0)/n))
2 * (1-pt(t.statistic, n-1))
library(ggplot2)
df <- data.frame(dose=c("D0.5", "D1", "D2"),
len=c(4.2, 10, 29.5))
head(df)
ggplot(data=df, aes(x=dose, y=len, group=1)) +
geom_line()+
geom_point()
vec <- c(26.34,25.84, 25.58, 24.64, 27.78 )
b6 <- c(26.34,25.84, 25.58, 24.64, 27.78 )
summary(b6)
stdv(b6)
sd(b6)
mean(b6)
library(Hmisc)
describe(b6)
library(pastecs)
stat.desc(b6)
stats <-stat.desc(b6)
des.stats <-stat.desc(b6)
stat.desc(b6)
data.frame(stat.desc(b6))
stats <- data.frame(stat.desc(b6))
View(stats)
View(stats)
b6 <- c(32.18,
32.71,
31.77,
32.88,
34.30 )
stats <- data.frame(stat.desc(b6))
View(stats)
View(stats)
b200 <- (31.97,
33.83,
36.97,
33.58,
34.72)
b200 <- c(31.97,
33.83,
36.97,
33.58,
34.72)
stats200 <- data.frame(stat.desc(b200))
View(stats200)
View(stats200)
df <- data.frame(b6, b200)
View(df)
View(df)
stats6 <- stat.desc(b6)
stats200 <- stat.desc(b200)
df <- data.frame(b6, b200)
View(df)
View(df)
df <- data.frame(stats6, stats200)
View(df)
library(nycflights13)
library(tidyverse)
bh <- c(30.79,
33.60,
31.63,
30.81,
31.43)
stats6 <- stat.desc(b6)
stats200 <- stat.desc(b200)
statsh <- stats.desc(bh)
library(ggplot2)
library(pastecs)
b6 <- c(32.18,
32.71,
31.77,
32.88,
34.30 )
b200 <- c(31.97,
33.83,
36.97,
33.58,
34.72)
bh <- c(30.79,
33.60,
31.63,
30.81,
31.43)
stats6 <- stat.desc(b6)
stats200 <- stat.desc(b200)
statsh <- stats.desc(bh)
library(pastecs)
statsh <- stats.desc(bh)
stats200 <- stat.desc(b200)
statsh <- stat.desc(bh)
statsh
df <- data.frame(stats6, stats200, statsh)
View(stats)
View(df)
statsh <- data.frame(stat.desc(bh))
View(statsh)
View(statsh)
statsh <- stat.desc(bh)
df <- data.frame(stats6, stats200, statsh)
library(nycflights13)
library(tidyverse)
mpg <- mpg
ggplot(data = mpg,  aes(x = displ)) +
geom_histogram() +
facet_wrap(~class)
View(mpg)
View(mpg)
bnone <- c(30.79,
33.60,
31.63,
30.81,
31.43)
bnone <- c(30.24,
33.40,
31.49,
33.40,
31.93)
statsn <- data.frame(stat.desc(bnone))
View(statsn)
View(statsn)
1.96*0.51
2.145*0.51461053
error <- qnorm(0.975)*1.15070413/sqrt(5)
error
qnorm(0.975)
1.15/(sqrt(5))
0.43038820*2.145
calc_ci <-  fucntion(row){
me <- 2.145 * row.SE.mean
lb <- row.mean - me
ub <- row.mean + me
return(c(lb,ub))
}
calc_ci <-  fucntion(row){
me <- 2.145 * row.SE.mean
lb <- row.mean - me
ub <- row.mean + me
return(c(lb,ub))
}
calc_ci <-  fucntion(row){
me <- 2.145 * row.SE.mean
lb <- row.mean - me
ub <- row.mean + me
return(c(lb,ub))
}
calc_ci <- function(row){
me <- 2.145 * row.SE.mean
lb <- row.mean - me
ub <- row.mean + me
return(c(lb,ub))
}
calc_ci(df.stats6)
df.stats6
calc_ci(df[,'stats6'])
calc_ci(df[,'stats6'])
df.stats6
df[,'stats6']
df[c('SE.mean', 'mean'),'stats6']
calc_ci <- function(mean, SE.mean){
me <- 2.145 * SE.mean
lb <- mean - me
ub <- mean + me
return(c(lb,ub))
}
calc_ci(df[c('mean', 'SE.mean'),'stats6'])
df[c('mean', 'SE.mean'),'stats6']
calc_ci <- function(col){
mean <- df[c('mean'), col]
SE.mean <-  df[c('SE.mean'), col]
me <- 2.145 * SE.mean
lb <- mean - me
ub <- mean + me
return(c(lb,ub))
}
calc_ci(df, 'stats6')
calc_ci <- function(df, col){
mean <- df[c('mean'), col]
SE.mean <-  df[c('SE.mean'), col]
me <- 2.145 * SE.mean
lb <- mean - me
ub <- mean + me
return(c(lb,ub))
}
df <- data.frame(stats6, stats200, statsh)
calc_ci(df, 'stats6')
stats6 <- stat.desc(b6)
bnegative <- c(37.80,
39.29,
40.45,
40.15,
40.24)
statsnegative <- data.frame(stat.desc(bnegative))
View(statsnegative)
View(statsnegative)
stats6 <- stat.desc(b6)
stats200 <- stat.desc(b200)
statsh <- stat.desc(bh)
statsn <- stat.desc(bnone)
statsnegative <- (stat.desc(bnegative)
stats6 <- stat.desc(b6)
stats200 <- stat.desc(b200)
statsh <- stat.desc(bh)
statsnone <- stat.desc(bnone)
statsnegative <- (stat.desc(bnegative)
df <- data.frame(stats6, stats200, statsh, statsnone, statsnegative)
stats6 <- stat.desc(b6)
stats200 <- stat.desc(b200)
statsh <- stat.desc(bh)
statsnone <- stat.desc(bnone)
statsnegative <- stat.desc(bnegative)
df <- data.frame(stats6, stats200, statsh, statsnone, statsnegative)
FALSE
df <- data.frame(stats6, stats200, statsh, statsnone, statsnegative)
write.csv(df,"values.csv", row.names = FALSE)
df <- data.frame(stats6, stats200, statsh, statsnone, statsnegative)
write.csv(df,"values.csv", row.names = TRUE)
df <- data.frame(stats6, stats200, statsh, statsnone, statsnegative)
write.csv(df,"v.csv", row.names = TRUE)
stats6 <- data.frame(stat.desc(b6))
View(stats6)
View(stats6)
32.7-1.2
32.7+1.2
setwd("~/GitHub/mippa_exam")
library(nycflights13)
library(tidyverse)
data <- read_delim("TrainingValidationData_200k_shuffle.csv", col_names = c('event_id', 'process_id', 'event_weight', 'MET', 'METphi'), delim=';')
View(data)
data <- read_delim("TrainingValidationData_200k_shuffle.csv", col_names = c('event_id', 'process_id', 'event_weight', 'MET', 'METphi', 'obj1', 'e1', 'pt1', 'eta1', 'phi1'), delim=';')
View(data)
View(data)
df <- data %>% arrange(event_id)
ggplot(data=df, aes(x=MET)) +
geom_histogram() +
facet_wrap(~process_id)
df <- df %>% mutate(
ftop = case_when(
process_id == '4top' ~ 1,
process_id != '4top' ~ 0
)
)
d
df <- df %>% mutate(
ftop = case_when(
process_id == '4top' ~ 1,
process_id != '4top' ~ 0
)
)
df <- df %>% mutate(
ftop = case_when(
process_id == '4top' ~ 1,
process_id != '4top' ~ 0
))
df <- data %>% arrange(event_id)
df <- df %>% mutate(
ftop = case_when(
process_id == '4top' ~ 1,
process_id != '4top' ~ 0
))
View(df)
View(df)
df <- data %>% arrange(event_id) %>% mutate(
ftop = case_when(
process_id == '4top' ~ 1,
process_id != '4top' ~ 0
))
glm
View(data)
View(data)
mylogit <- glm(ftop ~ MET + METphi, data = df)
summary(mylogit)
log(2)
df <- data %>% arrange(event_id) %>% mutate(
ftop = case_when(
process_id == '4top' ~ 1,
process_id != '4top' ~ 0
)) %>% mutate(lMET = log(MET))
mylogit <- glm(ftop ~ lMET + METphi, data = df)
summary(mylogit)
ggplot(data=df, aes(x=lMET)) +
geom_histogram() +
facet_wrap(~process_id)
ggplot(data=df, aes(x=lMET)) +
geom_histogram()
+
facet_wrap(~process_id)
ggplot(data=df, aes(x=lMET)) +
geom_histogram() +
facet_wrap(~process_id)
ggplot(data=df, aes(x=MET, y=ftop)) +
geom_histogram()
ggplot(data=df, aes(x=MET, y=ftop)) +
geom_histogram()
ggplot(data=df, aes(x=MET, y=ftop)) +
geom_scatter()
ggplot(data=df, aes(x=MET, y=ftop)) +
geom_point()
ggplot(data=df, aes(x=MET, y=ftop)) +
geom_point()
ggplot(data=df, aes(x=MET)) +
geom_hist() +
facet_wrap(~ftop)
ggplot(data=df, aes(x=MET)) +
geom_histogram() +
facet_wrap(~ftop)
ggplot(data=df, aes(x=lMET)) +
geom_histogram() +
facet_wrap(~ftop)
ggplot(data=df, aes(x=METphi)) +
geom_histogram() +
facet_wrap(~ftop)
