plot_dist <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(u)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/11)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_dist(10,5)
plot_dist <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/11)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_dist(10,5)
plot_dist(100,5)
plot_dist(100,30)
plot_dist <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat dit mijn mean is: ", u))
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/11)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_dist(100,30)
plot_dist <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat dit mijn mean is: ", u))
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/11)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_dist(30,100)
plot_clt <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat dit mijn mean is: ", u))
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/11)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_clt(30,100)
plot_clt <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat dit mijn mean is: ", u))
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/11)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_clt(1000,30)
plot_clt <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat dit mijn mean is: ", u))
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/19)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_clt(1000,30)
plot_clt(1000,20)
plot_clt(1000,15)
plot_clt(1000,30)
plot_clt(1000,10)
plot_clt(1000,10)
plot_clt(1000,10)
plot_clt(1000,5)
plot_clt(1000,30)
plot_clt <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat dit mijn mean is: ", u))
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/99)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_clt(1000,30)
plot_clt <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat dit mijn mean is: ", u))
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/29)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_clt(1000,30)
plot_clt(1000,30)
plot_clt <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat dit mijn mean is: ", u))
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/29), density = TRUE))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_clt(1000,30)
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/29)))
plot_clt <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat dit mijn mean is: ", u))
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/29)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_clt(1000,30)
plot_clt(1000,30)
plot_clt <- function(number_of_samples, sample_size) {
sample_means = vector()
for (i in 1:number_of_samples) {
sample <- runif(sample_size,0,1)
u <- mean(sample)
sample_means <- append(sample_means, u)
sd_u <- sd(sample)
root_n <- sqrt(sample_size)
print(sd_u)
print(paste0("ik schat dat dit mijn mean is: ", u))
print(paste0("ik schat dat mijn SE dit is: ", (sd_u/root_n)))
}
#print(paste0("mean of sample means: ", mean(sample_means)))
plot(hist(sample_means, breaks = seq(0,1,1/77)))
print(paste0("SD of sampling distribution: ", sd(sample_means)))
}
plot_clt(1000,30)
plot_clt(1000,5)
plot_clt(1000,30)
?dnorm
plot(20:290, dnorm(20:290, mean=150, sd=40), type="l", xlab="X",
ylab="Prob Density", main="Normal, Mean=150, SD=40", las=1)
dnorm(0:10,sd=2,mean=1)
# plot a normal probability distribution,
# with mean=150, sd=40
plot(20:290, dnorm(20:290, mean=150, sd=30), type="l", xlab="X",
ylab="Prob Density", main="Normal, Mean=150, SD=40", las=1)
# plot a normal probability distribution,
# with mean=150, sd=40
plot(20:290, dnorm(20:290, mean=150, sd=40), type="l", xlab="X",
ylab="Prob Density", main="Normal, Mean=150, SD=40", las=1)
# plot a normal probability distribution,
# with mean=150, sd=40
plot(20:290, dnorm(20:290, mean=100, sd=40), type="l", xlab="X",
ylab="Prob Density", main="Normal, Mean=150, SD=40", las=1)
# plot a normal probability distribution,
# with mean=150, sd=40
plot(0:290, dnorm(20:290, mean=100, sd=40), type="l", xlab="X",
ylab="Prob Density", main="Normal, Mean=150, SD=40", las=1)
# plot a normal probability distribution,
# with mean=150, sd=40
plot(0:290, dnorm(0:290, mean=100, sd=40), type="l", xlab="X",
ylab="Prob Density", main="Normal, Mean=150, SD=40", las=1)
50
# take a sample of size n from this population
n <- 20
# plot a normal probability distribution,
# with mean=150, sd=40
plot(20:290, dnorm(20:290, mean=150, sd=40), type="l", xlab="X",
ylab="Prob Density", main="Normal, Mean=150, SD=40", las=1)
?plot
?dnorm
n <- 20
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
n <- 20
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
# if you prefer, instead of a histogram, include a "smoothed
# density curve"
lines(density(samp), type="l")
# overlay the TRUE Normal probability distribution
lines(20:290, dnorm(20:290, mean=150, sd=40), type="l", col="blue")
n <- 20
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
# if you prefer, instead of a histogram, include a "smoothed
# density curve"
lines(density(samp), type="l")
n <- 20
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
n <- 200
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
148.2634/sqrt(n)
plot(20:290, dnorm(20:290, mean=150, sd=40), type="l", xlab="X",
ylab="Prob Density", main="Normal, Mean=150, SD=40", las=1)
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
mean(samp)-(1.96*SE)
mean(samp)
mean(samp)+(1.96*SE)
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 300
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
# if you prefer, instead of a histogram, include a "smoothed
# density curve"
lines(density(samp), type="l")
# overlay the TRUE Normal probability distribution
lines(20:290, dnorm(20:290, mean=150, sd=40), type="l", col="blue")
s <- [1,2]
s <- (1,2)
4+ 5
?c
list <- c(1,2)
list2 <- c(3,4)
listt <- c(list,list2)
install.packages("AUC")
?read
?read.table
x = read.table('merged.test')
library(nycflights13)
library(tidyverse)
setwd("~/GitHub/Master/MiPPA/exam")
setwd("~/")
setwd("~/GitHub/Master/MiPPA/exam")
df <- data.frame('TrainingValidationData_200k_sjuffle.csv')
df <- data.frame('TrainingValidationData_200k_sjuffle.csv')
View(df)
View(df)
df <- data.csv('TrainingValidationData_200k_sjuffle.csv')
df <- read.csv(file='TrainingValidationData_200k_sjuffle.csv')
df <- read.csv(file='TrainingValidationData_200k_shuffle.csv')
data <- read.csv(file='TrainingValidationData_200k_shuffle.csv')
library(readr)
TrainingValidationData_200k_shuffle <- read_csv("TrainingValidationData_200k_shuffle.csv")
View(TrainingValidationData_200k_shuffle)
data <- read_csv("TrainingValidationData_200k_shuffle.csv")
data <- read_csv("TrainingValidationData_200k_shuffle.csv")
View(data)
View(data)
